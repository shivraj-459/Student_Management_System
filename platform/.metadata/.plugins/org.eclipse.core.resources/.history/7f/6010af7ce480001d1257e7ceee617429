package com.commons.service;

import java.util.Optional;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.commons.DTO.CourseOutputDTO;
import com.commons.DTO.StudentAddressDTO;
import com.commons.DTO.StudentInputDTO;
import com.commons.DTO.StudentOutputDTO;
import com.commons.exception.CourseException;
import com.commons.exception.StudentException;
import com.commons.model.Student;
import com.commons.repository.StudentRepository;

@Service
public class StudentServiceImpl implements StudentService{

	@Autowired
	private StudentRepository studentRepository;
	
	
	@Override
	public StudentOutputDTO updateEmailAndMobile(StudentInputDTO dto) throws StudentException {

        Optional<Student> optional= studentRepository.findById(dto.getStudentId());
        
        if(!optional.isPresent()) {
        	
        	throw new StudentException("student not registered with "+dto.getStudentId());
        }
        
        Student student= optional.get();
        
        student.setEmail(dto.getEmail());
        student.setMobileNumber(dto.getMobileNumber());
        
       Student savedStudent= studentRepository.save(student);
        
       StudentOutputDTO studentOutputDTO=new StudentOutputDTO();
       
       BeanUtils.copyProperties(savedStudent, studentOutputDTO);
		
		return studentOutputDTO;
	}

	@Override
	public StudentOutputDTO updateStudentAddress(StudentAddressDTO addressDTO) throws StudentException {


		Optional<Student> optional= studentRepository.findById(addressDTO.getStudentId());
		
		if(!optional.isPresent()) {
			
			throw new StudentException("student not registered with "+addressDTO.getStudentId());
		}
		
		Student student= optional.get();
		
		   student.getAddresses().add(addressDTO.getAddress());
		 Student savedStudent=  studentRepository.save(student);
		 
		 StudentOutputDTO studentOutputDTO=new StudentOutputDTO();
	       
	       BeanUtils.copyProperties(savedStudent, studentOutputDTO);
			
			return studentOutputDTO;
	}

	@Override
	public CourseOutputDTO getStudentCourses(Integer studentId, String dateOfBirth) throws StudentException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public CourseOutputDTO leaveCourse(Integer studentId, String dateOfBirth, Integer courseId)
			throws StudentException, CourseException {
		// TODO Auto-generated method stub
		return null;
	}

}
